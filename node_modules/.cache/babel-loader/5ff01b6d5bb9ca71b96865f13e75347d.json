{"ast":null,"code":"var _jsxFileName = \"/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/Common/CardDelete.js\";\nimport React from \"react\";\nimport { deleteCard } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardDelete({\n  error,\n  setError,\n  deck,\n  cardId,\n  setDeck\n}) {\n  const abortController = new AbortController();\n\n  function handleDelete(event) {\n    event.preventDefault();\n    const answer = window.confirm(\"Delete the card?\\n\\nYou will not be able to recover it.\");\n\n    if (answer) {\n      deleteCard(cardId, abortController.signal).then(() => {\n        const filteredCards = deck.cards.filter(selected => selected.id !== cardId);\n        setDeck(() => {\n          return { ...deck,\n            cards: filteredCards\n          };\n        });\n      }).catch(e => {\n        setError(() => e);\n        console.log(e);\n      });\n    }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        setError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger ml-1\",\n    onClick: handleDelete,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"oi oi-trash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = CardDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDelete\");","map":{"version":3,"sources":["/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/Common/CardDelete.js"],"names":["React","deleteCard","ErrorMessage","CardDelete","error","setError","deck","cardId","setDeck","abortController","AbortController","handleDelete","event","preventDefault","answer","window","confirm","signal","then","filteredCards","cards","filter","selected","id","catch","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,MAAzB;AAAiCC,EAAAA;AAAjC,CAApB,EAAgE;AAC7E,QAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CACb,yDADa,CAAf;;AAGA,QAAIF,MAAJ,EAAY;AACVb,MAAAA,UAAU,CAACM,MAAD,EAASE,eAAe,CAACQ,MAAzB,CAAV,CACGC,IADH,CACQ,MAAM;AACV,cAAMC,aAAa,GAAGb,IAAI,CAACc,KAAL,CAAWC,MAAX,CACnBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBhB,MADV,CAAtB;AAGAC,QAAAA,OAAO,CAAC,MAAM;AACZ,iBAAO,EAAE,GAAGF,IAAL;AAAWc,YAAAA,KAAK,EAAED;AAAlB,WAAP;AACD,SAFM,CAAP;AAGD,OARH,EASGK,KATH,CASUC,CAAD,IAAO;AACZpB,QAAAA,QAAQ,CAAC,MAAMoB,CAAP,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OAZH;AAaD;;AAED,QAAIrB,KAAJ,EAAW;AACT,0BAAO,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AACD,sBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qBAAhC;AAAsD,IAAA,OAAO,EAAEM,YAA/D;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAjCuBR,U","sourcesContent":["import React from \"react\";\nimport { deleteCard } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\n\nexport default function CardDelete({ error, setError, deck, cardId, setDeck }) {\n  const abortController = new AbortController();\n\n  function handleDelete(event) {\n    event.preventDefault();\n    const answer = window.confirm(\n      \"Delete the card?\\n\\nYou will not be able to recover it.\"\n    );\n    if (answer) {\n      deleteCard(cardId, abortController.signal)\n        .then(() => {\n          const filteredCards = deck.cards.filter(\n            (selected) => selected.id !== cardId\n          );\n          setDeck(() => {\n            return { ...deck, cards: filteredCards };\n          });\n        })\n        .catch((e) => {\n          setError(() => e);\n          console.log(e);\n        });\n    }\n\n    if (error) {\n      return <ErrorMessage setError={setError} />;\n    }\n  }\n  return (\n    <button type=\"button\" className=\"btn btn-danger ml-1\" onClick={handleDelete}>\n      <span className=\"oi oi-trash\" />\n    </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}