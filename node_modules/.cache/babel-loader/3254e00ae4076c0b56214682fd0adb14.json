{"ast":null,"code":"var _jsxFileName = \"/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/View.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Study from \"../Study/Study\";\nimport { readDeck } from \"../../utils/api/index\";\nimport ViewNav from \"./ViewNav\";\nimport ManageDeck from \"./ManageDeck\";\nimport CardsList from \"./CardsList\";\nimport AddEditCard from \"../Forms/AddEditCard\";\nimport EditDeck from \"../Forms/EditDeck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function View({\n  decks,\n  setDecks,\n  error,\n  setError\n}) {\n  _s();\n\n  const [deck, setDeck] = useState({});\n  const abortController = new AbortController();\n  const {\n    params: {\n      deckId\n    },\n    url\n  } = useRouteMatch();\n  useEffect(() => {\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n    return () => abortController.abort();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/cards/:cardId/edit`,\n        children: /*#__PURE__*/_jsxDEV(AddEditCard, {\n          edit: true,\n          deck: deck,\n          setDeck: setDeck,\n          deckUrl: url,\n          deckId: deckId,\n          error: error,\n          setError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(AddEditCard, {\n          edit: false,\n          deck: deck,\n          setDeck: setDeck,\n          deckUrl: url,\n          deckId: deckId,\n          error: error,\n          setError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/edit`,\n        children: /*#__PURE__*/_jsxDEV(EditDeck, {\n          deck: deck,\n          setDeck: setDeck,\n          deckUrl: url,\n          error: error,\n          setError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/study`,\n        children: /*#__PURE__*/_jsxDEV(Study, {\n          deckId: deckId,\n          deck: deck,\n          setDeck: setDeck,\n          error: error,\n          setError: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: url,\n        children: [/*#__PURE__*/_jsxDEV(ViewNav, {\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ManageDeck, {\n          deck: deck,\n          decks: decks,\n          error: error,\n          setError: setError,\n          setDecks: setDecks,\n          deckId: deckId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), Object.keys(deck).length > 0 ? deck.cards.length > 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3\",\n          children: \"Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"There are no cards in this deck yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(CardsList, {\n          error: error,\n          setError: setError,\n          setDeck: setDeck,\n          deck: deck,\n          url: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(View, \"uN924E3KMXjiVuVu8Uvmcc9x8DA=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/View.js"],"names":["React","Fragment","useState","useEffect","Switch","Route","useRouteMatch","Study","readDeck","ViewNav","ManageDeck","CardsList","AddEditCard","EditDeck","View","decks","setDecks","error","setError","deck","setDeck","abortController","AbortController","params","deckId","url","signal","then","catch","abort","Object","keys","length","cards"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Study from \"../Study/Study\";\nimport { readDeck } from \"../../utils/api/index\";\nimport ViewNav from \"./ViewNav\";\nimport ManageDeck from \"./ManageDeck\";\nimport CardsList from \"./CardsList\";\nimport AddEditCard from \"../Forms/AddEditCard\";\nimport EditDeck from \"../Forms/EditDeck\";\n\nexport default function View({ decks, setDecks, error, setError }) {\n  const [deck, setDeck] = useState({});\n  const abortController = new AbortController();\n  const {\n    params: { deckId },\n    url,\n  } = useRouteMatch();\n\n  useEffect(() => {\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route path={`${url}/cards/:cardId/edit`}>\n          <AddEditCard\n            edit={true}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            deckId={deckId}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route path={`${url}/cards/new`}>\n          <AddEditCard\n            edit={false}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            deckId={deckId}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route path={`${url}/edit`}>\n          <EditDeck\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route path={`${url}/study`}>\n          <Study\n            deckId={deckId}\n            deck={deck}\n            setDeck={setDeck}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n\n        <Route exact path={url}>\n          <ViewNav deck={deck} />\n          <ManageDeck\n            deck={deck}\n            decks={decks}\n            error={error}\n            setError={setError}\n            setDecks={setDecks}\n            deckId={deckId}\n          />\n\n          {Object.keys(deck).length > 0 ? (\n            deck.cards.length > 0 ? (\n              <h2 className=\"mb-3\">Cards</h2>\n            ) : (\n              <h2>There are no cards in this deck yet.</h2>\n            )\n          ) : null}\n          <CardsList\n            error={error}\n            setError={setError}\n            setDeck={setDeck}\n            deck={deck}\n            url={url}\n          />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}