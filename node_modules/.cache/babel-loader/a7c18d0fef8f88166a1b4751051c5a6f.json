{"ast":null,"code":"var _jsxFileName = \"/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/Common/DeckDelete.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckDelete({\n  decks,\n  deckId,\n  error,\n  setError,\n  setDecks\n}) {\n  _s();\n\n  const abortController = new AbortController();\n  const history = useHistory();\n\n  function handleDelete(event) {\n    event.preventDefault();\n    const answer = window.confirm(\"Delete the deck?\\n\\nYou will not be able to recover it.\");\n\n    if (answer) {\n      deleteDeck(deckId, abortController.signal).then(() => {\n        const filteredDecks = decks.filter(selected => selected.id !== deckId);\n        setDecks(() => {\n          return [...filteredDecks];\n        });\n      }).then(history.push(\"/\")).catch(e => {\n        setError(() => e);\n        console.log(e);\n      });\n    }\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger float-right\",\n    onClick: handleDelete,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"oi oi-trash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckDelete, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckDelete\");","map":{"version":3,"sources":["/Users/tonybcod1ng/Documents/Thinkful/Qualified/Project_Flashcards_Qualified_1/src/Layout/Common/DeckDelete.js"],"names":["React","useHistory","deleteDeck","ErrorMessage","DeckDelete","decks","deckId","error","setError","setDecks","abortController","AbortController","history","handleDelete","event","preventDefault","answer","window","confirm","signal","then","filteredDecks","filter","selected","id","push","catch","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAApB,EAAkE;AAAA;;AAC/E,QAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,QAAMC,OAAO,GAAGX,UAAU,EAA1B;;AAEA,WAASY,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CACb,yDADa,CAAf;;AAIA,QAAIF,MAAJ,EAAY;AACVd,MAAAA,UAAU,CAACI,MAAD,EAASI,eAAe,CAACS,MAAzB,CAAV,CACGC,IADH,CACQ,MAAM;AACV,cAAMC,aAAa,GAAGhB,KAAK,CAACiB,MAAN,CAAcC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBlB,MAA3C,CAAtB;AACAG,QAAAA,QAAQ,CAAC,MAAM;AACb,iBAAO,CAAC,GAAGY,aAAJ,CAAP;AACD,SAFO,CAAR;AAGD,OANH,EAOGD,IAPH,CAOQR,OAAO,CAACa,IAAR,CAAa,GAAb,CAPR,EAQGC,KARH,CAQUC,CAAD,IAAO;AACZnB,QAAAA,QAAQ,CAAC,MAAMmB,CAAP,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OAXH;AAYD;AACF;;AAED,MAAIpB,KAAJ,EAAW;AACT,wBAAO,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,OAAO,EAAEK,YAHX;AAAA,2BAKE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvCuBT,U;UAENH,U;;;KAFMG,U","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\n\nexport default function DeckDelete({ decks, deckId, error, setError, setDecks }) {\n  const abortController = new AbortController();\n  const history = useHistory();\n\n  function handleDelete(event) {\n    event.preventDefault();\n    const answer = window.confirm(\n      \"Delete the deck?\\n\\nYou will not be able to recover it.\"\n    );\n\n    if (answer) {\n      deleteDeck(deckId, abortController.signal)\n        .then(() => {\n          const filteredDecks = decks.filter((selected) => selected.id !== deckId);\n          setDecks(() => {\n            return [...filteredDecks];\n          });\n        })\n        .then(history.push(\"/\"))\n        .catch((e) => {\n          setError(() => e);\n          console.log(e);\n        });\n    }\n  }\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-danger float-right\"\n      onClick={handleDelete}\n    >\n      <span className=\"oi oi-trash\" />\n    </button>\n  );\n}"]},"metadata":{},"sourceType":"module"}